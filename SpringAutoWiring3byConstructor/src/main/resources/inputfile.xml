<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     	http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	
<!-- autowiring byName checks for data with name of field and name of bean
hence if i had another bean "dep2" will not  have ambiquity(multipile names present(if same name beans>>then ambiquity) -->	 	
	<bean id="emp" class="com.demo.Employee" autowire="byName">
	<constructor-arg index="0" value="101"></constructor-arg>
	<constructor-arg index="1" value="Sameer"></constructor-arg>
	<constructor-arg index="2" value="Backend Java"></constructor-arg>
	<constructor-arg index="3" ref="dep1"></constructor-arg>		
	<!-- define Department department (in constructor it is neccessary) ref takes another bean as input -->
	<!-- hence multiple employees can have multiple Deparments -->
	</bean> 
	
	<bean id="dep1" class="com.demo.Department">
	<constructor-arg index="0" value="11"></constructor-arg>
	<constructor-arg index="1" value="Systems"></constructor-arg>
	<constructor-arg index="2" value="120"></constructor-arg>	
	</bean> 
	 
	
     	
</beans>

<!-- property requires setter method by default -->
<!-- while constructor-arg requires a exact matching parameter constructor to fields-->